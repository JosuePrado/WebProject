@page "/register"
@inject HttpClient Http

<h3>Register</h3>

<EditForm Model="Model" OnValidSubmit="CreateUser" FormName="registerForm">
    <div class="form-field">
        <label>Email:</label>
        <div>
            <InputText Class="form-control" placeholder="Email" @bind-Value="Model!.Email"/>
        </div>
    </div>
    <div class="form-field">
        <label>Password:</label>
        <div>
            <InputText Class="form-control" type="password" placeholder="Password" @bind-Value="Model!.Password" />
        </div>
    </div>
    <div class="form-field">
        <button type="submit" class="btn btn-primary">Register</button>
    </div>
    
</EditForm>

@code {

    [SupplyParameterFromForm]      
    private User Model { get; set; }

     protected override void OnInitialized() {
        Model = new User();  
     }
    private async Task CreateUser()
    {
        try
        {
            Console.WriteLine($"Entramos al create");
            Console.WriteLine($"Usuario email : {Model.Email}");
            Console.WriteLine($"Usuario password : {Model.Password}");
            var response = await Http.PostAsJsonAsync("http://localhost:5268/api/users", Model);
            Console.WriteLine($"Este es el response: {response}");
            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<User>();
                Console.WriteLine($"Usuario creado: {result}");
                
            }
            else
            {
                Console.WriteLine("Error al conectar o al registrar el usuario");
                
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            
        }
    }
}